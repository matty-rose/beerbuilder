
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.1-0.20200528125929-5c0c6ae3b64b
  creationTimestamp: null
  name: beverages.webapp.my.domain
spec:
  group: webapp.my.domain
  names:
    kind: Beverage
    listKind: BeverageList
    plural: beverages
    singular: beverage
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: Beverage is the Schema for the beverages API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: BeverageSpec defines the desired state of Beverage
          properties:
            brew:
              description: Brew is the beer type.
              enum:
              - Lager
              - IPA
              - IIPA
              - XPA
              - PaleAle
              - Stout
              type: string
          type: object
        status:
          description: BeverageStatus defines the observed state of Beverage
          properties:
            tasty:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              type: boolean
          required:
          - tasty
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
